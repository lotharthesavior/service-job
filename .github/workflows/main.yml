name: PHP Composer

on:
  push:
    branches: [ master ]
  pull_request:
    types: [opened, synchronize, reopened, closed]

jobs:

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: openswoole
          coverage: none
          tools: composer, phpunit
        env:
          fail-fast: true

      - name: Cache Composer packages
        id: composer-cache
        uses: actions/cache@v2
        with:
          path: vendor
          key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
          restore-keys: |
            ${{ runner.os }}-php-

      - name: Install dependencies
        if: steps.composer-cache.outputs.cache-hit != 'true'
        shell: bash
        run: composer install -q --no-ansi --no-interaction --no-scripts --no-progress --prefer-dist

      - name: Prepare env
        shell: bash
        run: sed 's|DB_DATABASE_PLACEHOLDER|${{ github.workspace }}/database/database.sqlite|g' ./.env.example > ./.env

      - name: Run Unit Tests
        shell: bash
        run: vendor/bin/phpunit

  deploy:
    needs: [test]
    runs-on: ubuntu-latest
    steps:
      - name: Login to Docker Registry
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login registry.savioresende.com -u ${{ secrets.DOCKER_USERNAME }} --password-stdin

      - name: Build Docker image
        shell: bash
        env:
          DOCKER_IMAGE_NAME: job-services-service
          ENV: ${{ secrets.ENV }}
        run: |
          rm -f ${{ github.workspace }}/.env
          echo "${ENV}" > ${{ github.workspace }}/.env
          docker build -t $DOCKER_IMAGE_NAME -f Dockerfile-prod .
          docker tag $DOCKER_IMAGE_NAME registry.savioresende.com/$DOCKER_IMAGE_NAME:$GITHUB_RUN_NUMBER
          docker push registry.savioresende.com/$DOCKER_IMAGE_NAME:$GITHUB_RUN_NUMBER

      - name: Install and Setup Kubectl
        uses: azure/setup-kubectl@v1

      - name: Replace Version Number
        run: sed 's/DEPLOYMENT_VERSION/'"$GITHUB_RUN_NUMBER"'/g' ./deployment-template.yml > ./deployment.yml

      - name: Setup kubeconfig
        run: |
          echo "${{ secrets.KUBECONFIG }}" > ./kubeconfig.yml

      - name: Deploy to Kubernetes
        run: |
          export KUBECONFIG=./kubeconfig.yml
          cat ./deployment.yml
          kubectl apply -f deployment.yml
